
   //server 

const express = require('express');
const mongoose = require('mongoose');
const jwt = require('jsonwebtoken');
const cors = require('cors');
const bcrypt = require('bcrypt');
const UserModel = require('./models/User');

const app = express();
const port = 5000;

app.use(cors());
app.use(express.json());

mongoose.connect("mongodb+srv://angelbelangel:angel@cluster0.zdy2k51.mongodb.net/angeldb");

const secretKey = 'mySecretKey';

// Registration endpoint
app.post('/users/register', async (req, res) => {
  const { username, password } = req.body;

  try {
    const existingUser = await UserModel.findOne({ username });

    if (existingUser) {
      return res.status(400).json({ message: 'Username already exists' });
    }

    // If the username is unique, proceed with registration
    const newUser = await UserModel.create({ username, password: await bcrypt.hash(password, 10) });
    res.status(201).json({ message: 'User registered successfully', newUser });
  } catch (error) {
    console.error('Registration failed:', error);
    res.status(500).json({ message: 'Internal server error' });
  }
});



// login endpoint
app.post('/users/login', async (req, res) => {
  const { username, password } = req.body;
  try {
    const user = await UserModel.findOne({ username:username});
    console.log(user)
    if(user){

    const token = jwt.sign({ username }, secretKey, { expiresIn: '1d' });
    res.json({ token }); 
  } 
  }catch(error){
        console.error('Login failed:', error);
        res.status(500).json({ message: 'Internal server error' });
  }
});





//   const { username, password } = req.body;
//   try {
//     const user = await UserModel.findOne({ username:username});
//     console.log(user)
//     if(user ){
//     const token = jwt.sign({ username }, secretKey, { expiresIn: '1d' });
//     res.json({ token }); 
//   } 
//   }catch(error){
//         console.error('Login failed:', error);
//         res.status(500).json({ message: 'Internal server error' });
//   }
// });

app.listen(port, () => {
  console.log(`Server is running on port ${port}`);
});


//loginform


import React, { useState } from 'react';
import axios from 'axios';

function LoginForm({ setIsLogin }: any) {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async () => {
    try {
      const response = await axios.post('http://localhost:5000/users/login', {
        username,
        password,
      });
      const token = response.data.token;

      // Save the token to local storage
      localStorage.setItem('token', token);
      setIsLogin(true);
    } catch (error:any) {
      // console.error('Login failed:', error.response.data.message);
      console.log(error)
    }
  }

  return (
    <div className='container d-block align-items-center justify-content-center col-md-3 mt-5 was-validated'>
    <h2 className='text-center  mb-3 text-success'>Login to your account</h2>
    <div>
      <label className='form-label'>Username:</label>
      <input className='form-control'
        type="text"
        placeholder="Username"
        value={username}
        onChange={(e) => setUsername(e.target.value)}
        required
      />
    </div>
    <div>
      <label className='form-label'>Password:</label>
      <input className='form-control'
        type="password"
        placeholder="Password"
        value={password}
        onChange={(e) => setPassword(e.target.value)}
        required
      />
    </div>
   
    <button type="submit" onClick={handleLogin} className="btn btn-primary btn-lg mt-3">Sign in</button>
  </div>
  );
}

export default LoginForm;



